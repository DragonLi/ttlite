let t = \ (x :: *) -> x;

let id  = (\ (a :: *) (x :: a) -> x )
    :: forall (a :: *) . a -> a;
let const = (\ (a :: *) (b :: *) (x :: a) (y :: b) -> x)
    :: forall (a :: *). forall (b :: *) . a -> b -> a;

let const1 = (\ (a :: *) (x :: a) (b :: *) (y :: b) -> x)
    :: forall (a :: *). a -> forall (b :: *) . b -> a;

