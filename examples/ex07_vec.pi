-- sample vectors
let v0 = VNil Nat :: Vec Nat 0;
let v1 = VCons Nat 0 1 v0 :: Vec Nat 1;
let v2 = VCons Nat 1 2 v1 :: Vec Nat 2;

-- generate a vector of given length from a specified element (replicate)
let replicate =
  ( natElim
      ( \ (n :: Nat) -> forall (a :: *) . a -> Vec a n )
      ( \ (a :: *) (_ :: a) -> VNil a )
      ( \ (n :: Nat) (rec :: forall (a :: *) . a -> Vec a n) (a :: *) (x :: a) -> VCons a n x (rec a x) ) )
  :: forall (n :: Nat) . forall (a :: *) . a -> Vec a n;

let v3 = replicate 3 Nat 0;

-- generate a vector of given length n, containing the natural numbers smaller than n
let fromto =
  natElim
    ( \ (n :: Nat) -> Vec Nat n )
    ( VNil Nat )
    ( \ (n :: Nat) (rec :: Vec Nat n) -> VCons Nat n n rec );

let v4 = fromto 4;




