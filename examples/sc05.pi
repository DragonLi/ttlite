listElim Nat
(\ (a :: List Nat) -> Eq (List Nat)
        (listElim Nat (\ (b :: List Nat) -> List Nat) b1
            (\ (b :: Nat) -> \ (c :: List Nat) -> \ (d :: List Nat) -> Cons
                            Nat
                            b
                            d)
            a)
        (listElim Nat (\ (b :: List Nat) -> List Nat) b1
            (\ (b :: Nat) -> \ (c :: List Nat) -> \ (d :: List Nat) -> Cons
                            Nat
                            b
                            (listElim Nat (\ (e :: List Nat) -> List Nat)
                                b1
                                (\ (e :: Nat) -> \ (f :: List Nat) -> \ (g :: List
                                            Nat) -> Cons Nat e g)
                                c))
            a))
(Refl (List Nat) b1)
(\ (a :: Nat) -> \ (b :: List Nat) -> \ (c :: Eq (List Nat)
            (listElim Nat (\ (c :: List Nat) -> List Nat) b1
                (\ (c :: Nat) -> \ (d :: List Nat) -> \ (e :: List Nat) -> Cons
                                Nat
                                c
                                e)
                b)
            (listElim Nat (\ (c :: List Nat) -> List Nat) b1
                (\ (c :: Nat) -> \ (d :: List Nat) -> \ (e :: List Nat) -> Cons
                                Nat
                                c
                                (listElim Nat
                                    (\ (f :: List Nat) -> List Nat)
                                    b1
                                    (\ (f :: Nat) -> \ (g :: List Nat) -> \ (h :: List
                                                Nat) -> Cons Nat f h)
                                    d))
                b)) -> eqElim (List Nat)
                (\ (d :: List Nat) -> \ (e :: List Nat) -> \ (f :: Eq
                            (List Nat)
                            d
                            e) -> Eq (List Nat) (Cons Nat a d)
                                (Cons Nat a e))
                (\ (d :: List Nat) -> Refl (List Nat) (Cons Nat a d))
                (listElim Nat (\ (d :: List Nat) -> List Nat) b1
                    (\ (d :: Nat) -> \ (e :: List Nat) -> \ (f :: List Nat) -> Cons
                                    Nat
                                    d
                                    f)
                    b)
                (listElim Nat (\ (d :: List Nat) -> List Nat) b1
                    (\ (d :: Nat) -> \ (e :: List Nat) -> \ (f :: List Nat) -> Cons
                                    Nat
                                    d
                                    f)
                    b)
                (listElim Nat
                    (\ (d :: List Nat) -> Eq (List Nat)
                            (listElim Nat (\ (e :: List Nat) -> List Nat)
                                b1
                                (\ (e :: Nat) -> \ (f :: List Nat) -> \ (g :: List
                                            Nat) -> Cons Nat e g)
                                d)
                            (listElim Nat (\ (e :: List Nat) -> List Nat)
                                b1
                                (\ (e :: Nat) -> \ (f :: List Nat) -> \ (g :: List
                                            Nat) -> Cons Nat e g)
                                d))
                    (Refl (List Nat) b1)
                    (\ (d :: Nat) -> \ (e :: List Nat) -> \ (f :: Eq
                                (List Nat)
                                (listElim Nat
                                    (\ (f :: List Nat) -> List Nat)
                                    b1
                                    (\ (f :: Nat) -> \ (g :: List Nat) -> \ (h :: List
                                                Nat) -> Cons Nat f h)
                                    e)
                                (listElim Nat
                                    (\ (f :: List Nat) -> List Nat)
                                    b1
                                    (\ (f :: Nat) -> \ (g :: List Nat) -> \ (h :: List
                                                Nat) -> Cons Nat f h)
                                    e)) -> eqElim (List Nat)
                                    (\ (g :: List Nat) -> \ (h :: List Nat) -> \ (i :: Eq
                                                (List Nat)
                                                g
                                                h) -> Eq (List Nat)
                                                    (Cons Nat d g)
                                                    (Cons Nat d h))
                                    (\ (g :: List Nat) -> Refl (List Nat)
                                            (Cons Nat d g))
                                    (listElim Nat
                                        (\ (g :: List Nat) -> List Nat)
                                        b1
                                        (\ (g :: Nat) -> \ (h :: List Nat) -> \ (i :: List
                                                    Nat) -> Cons Nat g i)
                                        e)
                                    (Cons Nat d f)
                                    f)
                    b))
b