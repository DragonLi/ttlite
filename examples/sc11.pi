natElim
(\ (a :: Nat) -> Eq Nat
        (natElim (\ (b :: Nat) -> Nat) Zero
            (\ (b :: Nat) -> \ (c :: Nat) -> Succ c)
            a)
        (natElim (\ (b :: Nat) -> Nat) Zero
            (\ (b :: Nat) -> \ (c :: Nat) -> Succ
                        (natElim (\ (d :: Nat) -> Nat) Zero
                            (\ (d :: Nat) -> \ (e :: Nat) -> Succ e)
                            b))
            a))
(Refl Nat Zero)
(\ (a :: Nat) -> \ (b :: Eq Nat
        (natElim (\ (b :: Nat) -> Nat) Zero
            (\ (b :: Nat) -> \ (c :: Nat) -> Succ c)
            a)
        (natElim (\ (b :: Nat) -> Nat) Zero
            (\ (b :: Nat) -> \ (c :: Nat) -> Succ
                        (natElim (\ (d :: Nat) -> Nat) Zero
                            (\ (d :: Nat) -> \ (e :: Nat) -> Succ e)
                            b))
            a)) -> fargCong Nat Nat
            (natElim (\ (c :: Nat) -> Nat) Zero
                (\ (c :: Nat) -> \ (d :: Nat) -> Succ d)
                a)
            (natElim (\ (c :: Nat) -> Nat) Zero
                (\ (c :: Nat) -> \ (d :: Nat) -> Succ d)
                a)
            (id Nat)
            (id Nat)
            (cong1 Nat Nat Succ
                (natElim (\ (c :: Nat) -> Nat) Zero
                    (\ (c :: Nat) -> \ (d :: Nat) -> Succ d)
                    a)
                (natElim (\ (c :: Nat) -> Nat) Zero
                    (\ (c :: Nat) -> \ (d :: Nat) -> Succ d)
                    a)
                (natElim
                    (\ (c :: Nat) -> Eq Nat
                            (natElim (\ (d :: Nat) -> Nat) Zero
                                (\ (d :: Nat) -> \ (e :: Nat) -> Succ e)
                                c)
                            (natElim (\ (d :: Nat) -> Nat) Zero
                                (\ (d :: Nat) -> \ (e :: Nat) -> Succ e)
                                c))
                    (Refl Nat Zero)
                    (\ (c :: Nat) -> \ (d :: Eq Nat
                            (natElim (\ (d :: Nat) -> Nat) Zero
                                (\ (d :: Nat) -> \ (e :: Nat) -> Succ e)
                                c)
                            (natElim (\ (d :: Nat) -> Nat) Zero
                                (\ (d :: Nat) -> \ (e :: Nat) -> Succ e)
                                c)) -> fargCong Nat Nat
                                (natElim (\ (e :: Nat) -> Nat) Zero
                                    (\ (e :: Nat) -> \ (f :: Nat) -> Succ f)
                                    c)
                                (natElim (\ (e :: Nat) -> Nat) Zero
                                    (\ (e :: Nat) -> \ (f :: Nat) -> Succ f)
                                    c)
                                (id Nat)
                                (id Nat)
                                (cong1 Nat Nat Succ
                                    (natElim (\ (e :: Nat) -> Nat) Zero
                                        (\ (e :: Nat) -> \ (f :: Nat) -> Succ
                                                    f)
                                        c)
                                    (natElim (\ (e :: Nat) -> Nat) Zero
                                        (\ (e :: Nat) -> \ (f :: Nat) -> Succ
                                                    f)
                                        c)
                                    d))
                    a)))
x
