-- testing that each construction on sc-tt is executed at least once

import "examples/core.tt";
import "examples/dproduct.tt";
import "examples/eq.tt";

assume ($A :: Set);
assume ($B :: forall (_ :: $A) . Set);
assume ($p :: exists (x :: $A) . $B x);
assume ($a :: $A);
assume ($b :: $B $a);

let (_, _) = sc_with_proof (fstD $A $B $p);
let (_, _) = sc_with_proof (sndD $A $B $p);
let (_, _) = sc_with_proof (dpair (exists (x :: $A) . $B x) $a $b);
