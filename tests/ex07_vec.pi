-- sample vectors
let v0 = VNil Nat :: Vec Nat Zero;
let v1 = VCons Nat Zero (Succ Zero) v0 :: Vec Nat (Succ Zero);
let v2 = VCons Nat (Succ Zero) (Succ (Succ Zero)) v1 :: Vec Nat (Succ (Succ Zero));

-- generate a vector of given length from a specified element (replicate)
let replicate =
    (\ (n :: Nat) ->
        natElim
            (\ (n :: Nat) -> forall (a :: Set) (_ :: a) . Vec a n )
            (\ (a :: Set) (_ :: a) -> VNil a )
            (\ (n :: Nat) (rec :: forall (a :: Set) (_ :: a) . Vec a n) (a :: Set) (x :: a) -> VCons a n x (rec a x) )
             n )
  :: forall (n :: Nat) . forall (a :: Set) (_ :: a) . Vec a n;

--let v3 = replicate 3 Nat 0;

-- generate a vector of given length n, containing the natural numbers smaller than n
let fromto =
    \ (n :: Nat) ->
        natElim
        ( \ (n :: Nat) -> Vec Nat n )
        ( VNil Nat )
        ( \ (n :: Nat) (rec :: Vec Nat n) -> VCons Nat n n rec )
        n;

--let v4 = fromto 4;




